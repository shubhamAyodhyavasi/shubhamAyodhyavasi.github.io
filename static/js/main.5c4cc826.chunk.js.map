{"version":3,"sources":["images/banner.png","images/about.png","components/header/Header.js","components/top-header/TopHeader.js","images/index.js","components/banner/Banner.js","components/cursor/Cursor.js","components/about-me/AboutMe.js","components/title/Title.js","components/title-list/TitleList.js","pages/HomePage.js","App.js","services/redux/actions/themeAction.js","services/redux/type/theme.js","serviceWorker.js","services/redux/reducers/userReducer.js","services/redux/reducers/themeReducer.js","services/redux/reducers/index.js","services/redux/type/user.js","services/redux/config/configureStore.js","index.js"],"names":["module","exports","NavItem","children","label","link","themeMode","className","classNames","href","connect","state","theme","mode","props","isDark","bgClass","map","menu","key","textClass","imgPack","banner","about","src","alt","Cursor","handleMouseMove","e","clientX","clientY","target","hoverClassList","isClickable","split","some","cls","includes","setState","pos","setTimeout","posBack","document","addEventListener","this","removeEventListener","style","top","left","React","Component","AboutMe","list","value","valueLink","Title","title","TitleList","item","TitleListItem","HomePage","App","setTheme","today","Date","getHours","payload","type","Boolean","window","location","hostname","match","initialState","user","action","middlewares","thunk","createStateSyncMiddleware","whitelist","persistConfig","storage","rootReducer","otherReducer","allReducers","combineReducers","persistedReducer","persistReducer","persistantStore","store","createStore","undefined","compose","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c4cc826.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.6e1065a9.png\";","module.exports = __webpack_public_path__ + \"static/media/about.88341a74.png\";","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames';\r\nconst NavItem = ({children, label, link, themeMode}) => {\r\n    return(\r\n        <li className=\"nav-item\">\r\n            <a className={classNames(\"nav-link\", {\r\n                \"text-info\": themeMode === \"dark\"\r\n            })} href={link}>{label}{children}</a>\r\n        </li>\r\n    )\r\n}\r\nconst Header = (props) => {\r\n    const menus = [\r\n        {\r\n            link: \"#\",\r\n            label: \"About\"\r\n        },\r\n        {\r\n            link: \"#\",\r\n            label: \"Service\"\r\n        },\r\n        {\r\n            link: \"#\",\r\n            label: \"Contact\"\r\n        },\r\n    ]\r\n    const isDark = props.themeMode === \"dark\";\r\n    const bgClass = isDark ? \"bg-dark\" : \"bg-white\";\r\n    return (\r\n        <div className={classNames(\"c-header border-bottom\", {\r\n            [bgClass]: bgClass, \r\n            \"border-secondary\" : isDark\r\n        })}>\r\n            <div className=\"container\">\r\n                <nav className=\"navbar\">\r\n                    <ul className=\"ml-auto nav\">\r\n                        {menus.map((menu, key) => <NavItem themeMode={props.themeMode} key={key} link={menu.link} label={menu.label} />)}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    themeMode: state.theme.mode\r\n})\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\nimport classNames from 'classnames'\r\nimport { connect } from 'react-redux';\r\n\r\nconst TopHeader = (props) => {\r\n    const textClass = props.themeMode === 'light' ? 'text-dark' : 'text-white'\r\n    return (\r\n        <div className={classNames(\"c-top-header p-3\", {\r\n            \"bg-light\": props.themeMode === 'light',\r\n            \"bg-black\": props.themeMode === 'dark',\r\n        })}>\r\n            <div className=\"container\">\r\n                <div className={textClass}>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    themeMode: state.theme.mode\r\n})\r\nexport default connect(mapStateToProps)(TopHeader);\r\n","import banner from './banner.png';\r\nimport about from './about.png';\r\n\r\nconst imgPack = {\r\n    banner,\r\n    about\r\n};\r\n\r\nexport default imgPack","import React from 'react';\r\nimport imgPack from '../../images';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nconst Banner = (props) => {\r\n    const isDark = props.themeMode === \"dark\";\r\n    const bgClass = isDark ? \"bg-dark\" : \"bg-white\";\r\n    return (\r\n        <div className={`c-banner py-5 ${bgClass}`}>\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-md-5\">\r\n                        <img className=\"img-fluid\" src={imgPack.banner} alt=\"shubham\"/>\r\n                    </div>\r\n                    <div className={classNames(\"col-md-7\", {\r\n                        \"text-light\": isDark,\r\n                    })}>\r\n                        <div className=\"p-5\">\r\n                            <h1 className=\"display-1\">Hi!</h1>\r\n                            <h3 className=\"display-4\">I am a <i>Front-end</i> Developer, graduate of <i>Computer Science</i>.</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    themeMode: state.theme.mode\r\n})\r\nexport default connect(mapStateToProps)(Banner);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nclass Cursor extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            pos: [0,0],\r\n            posBack: [0, 0],\r\n            isClickable: false,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        document.addEventListener(\"mousemove\", this.handleMouseMove);\r\n    }\r\n    componentWillMount(){\r\n        document.removeEventListener(\"mousemove\", this.handleMouseMove);\r\n    }\r\n    handleMouseMove = e => {\r\n        const {\r\n            clientX,\r\n            clientY,\r\n            target\r\n        } = e\r\n        const hoverClassList = [\r\n            \"nav-link\",\r\n            \"app-link\",\r\n            \"btn\"\r\n        ]\r\n        const classList = (target?.className || \"\").split(\" \");\r\n        const isClickable = classList.some(cls => hoverClassList.includes(cls) )\r\n        \r\n        this.setState({\r\n            pos: [clientX, clientY],\r\n            isClickable\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({posBack: [clientX, clientY]});\r\n        }, 50);\r\n    };\r\n    render(){\r\n        const {\r\n            pos,\r\n            posBack,\r\n            isClickable\r\n        } = this.state\r\n        return (\r\n            <>\r\n            <div style={{\r\n                top: pos[1],\r\n                left: pos[0],\r\n            }} className={classNames(\"c-cursor\", {\r\n                \"c-cursor--hovered\": isClickable\r\n            })} />\r\n            <div style={{\r\n                top: posBack[1],\r\n                left: posBack[0],\r\n            }} className={classNames(\"c-cursor c-cursor--back\", {\r\n                \"c-cursor--hovered\": isClickable\r\n            })} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cursor;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Title, TitleList } from '..'\r\nimport imgPack from '../../images'\r\n\r\nexport class AboutMe extends Component {\r\n    render() {\r\n        const listOne = [\r\n            {\r\n                label: \"Birthday\",\r\n                value: \"27th September 1996\",\r\n            },\r\n            {\r\n                label: \"Age\",\r\n                value: \"23 Yr\",\r\n            },\r\n            {\r\n                label: \"Residence\",\r\n                value: \"India\",\r\n            },\r\n            {\r\n                label: \"Address\",\r\n                value: \"Indore, India (452010)\",\r\n            },\r\n        ]\r\n        const listTwo = [\r\n            {\r\n                label: \"E-mail\",\r\n                value: \"shubhamgupta279@gmail.com\",\r\n                valueLink: \"mailto:shubhamgupta279@gmail.com\"\r\n            },\r\n            {\r\n                label: \"Phone\",\r\n                value: \"+91 898966776\",\r\n                valueLink: \"tel:+918982966776\"\r\n            },\r\n            {\r\n                label: \"Residence\",\r\n                value: \"India\",\r\n            },\r\n            {\r\n                label: \"Address\",\r\n                value: \"Indore, India (452010)\",\r\n            },\r\n        ]\r\n        return (\r\n            <div className=\"c-about-me pt-5\">\r\n                <div className=\"pt-5\"></div>\r\n                <div className=\"c-about-me__inner bg-light py-5\">\r\n                    <div className=\"container\">\r\n                        {/* <div className=\"p-5\"></div> */}\r\n                        <Title>About Me</Title>\r\n                        <div className=\"row flex-row-reverse\"> \r\n                            <div className=\"col-md-4 c-about-me__img-wrapper\">\r\n                                <img className=\"img-fluid c-about-me__img\" src={imgPack.about} alt=\"about\" />\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <p className=\"text-justify\">\r\n                                    Hi I am a front-end developer, graduate of <i>Computer Science</i>. I have more than 3 years commercial experience providing front-end development, producing high quality responsive websites and exceptional user experience.\r\n                                    <br/>\r\n                                    I am also a <span className=\"text-info\">React JS</span> Developer that have been developing front-end Javascript based solutions for over 2 years.\r\n                                    I prefer to develop using ES6 and more newer tools and codes with backward capability. \r\n                                </p>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <TitleList list={listOne} />\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <TitleList list={listTwo} />\r\n                                    </div>\r\n                                    <div className=\"col-12 text-center pt-4\">\r\n                                        <a href=\"#\" className=\"btn btn-outline-dark\">Download CV</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutMe)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport class Title extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"c-title\">\r\n                <h3 className=\"display-5\">{this.props.title} {this.props.children}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Title)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport class TitleList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"c-title-list\">\r\n                {\r\n                    this.props.list.map(\r\n                        (item, key) => <TitleListItem {...item} key={key} />\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst TitleListItem = ({label, value, valueLink}) => {\r\n    \r\n    return(\r\n        <div className=\"c-title-list__item\">\r\n            <span className=\"c-title-list__label\">{label}: </span>\r\n            {\r\n                value && (valueLink ? <a href={valueLink} className=\"c-title-list__value app-link\">{value}</a>: <span className=\"c-title-list__value\">{value}</span>)\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleList)\r\n","import React from 'react';\r\nimport { Banner, AboutMe } from '../components';\r\n\r\nconst HomePage = () => {\r\n\r\n    return(\r\n        <div className=\"p-home\">\r\n            <Banner />\r\n            <AboutMe />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react';\nimport './App.scss';\nimport { HomePage } from './pages'\nimport { TopHeader, Header, Cursor } from './components';\nimport { connect } from 'react-redux'\nimport { setTheme } from './services/redux/actions'\n\nclass App extends React.Component {\n  componentDidMount(){\n    const {\n      setTheme\n    } = this.props\n    const today = new Date().getHours();\n    if (today >= 5 && today <= 19) {\n      setTheme({\n        mode: \"light\",\n      })\n    } else {\n      setTheme({\n        mode: \"dark\",\n      })\n    }\n\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Cursor />\n        <TopHeader />\n        <Header />\n        <HomePage />\n      </div>\n    );\n  }\n}\nexport default connect(null, {\n  setTheme\n})(App);\n","import { SET_THEME } from '../type';\r\n\r\nexport const setTheme = (payload) => {\r\n    return ({\r\n        type: SET_THEME,\r\n        payload\r\n    })\r\n}","export const SET_THEME = \"SET_THEME\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_USER, UNSET_USER } from \"../type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case SET_USER:\r\n      return payload;\r\n\r\n    case UNSET_USER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_THEME } from \"../type\";\r\n\r\nconst initialState = {\r\n  mode: \"light\" // \"light|dark\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case SET_THEME:\r\n      return {\r\n        ...state,\r\n        ...payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {default as user} from \"./userReducer\";\r\nimport {default as theme} from \"./themeReducer\";\r\n\r\nexport default {\r\n    user,\r\n    theme\r\n}","export const SET_USER = \"SET_USER\";\r\nexport const UNSET_USER = \"UNSET_USER\";","import { createStore, applyMiddleware, compose, \r\n    combineReducers \r\n} from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import sessionStorage from \"redux-persist/lib/storage/session\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\nimport { createStateSyncMiddleware } from \"redux-state-sync\";\r\n\r\nconst middlewares = [\r\n    thunk,\r\n    createStateSyncMiddleware({\r\n        // blacklist: [\"extras\"]\r\n        whitelist: [\r\n            \"user\"\r\n        ]\r\n    })\r\n]\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\r\n        \"user\"\r\n    ]\r\n}\r\n// const sessionRedConfig = {\r\n//     key: \"other\",\r\n//     storage: sessionStorage\r\n// };\r\n\r\n// const { referrer, ...otherReducer } = rootReducer;\r\n// const allReducers = combineReducers({\r\n    //   ...otherReducer,\r\n    //   referrer: persistReducer(sessionRedConfig, referrer)\r\n// });\r\nconst { user, ...otherReducer } = rootReducer;\r\nconst allReducers = combineReducers({\r\n    user,\r\n  ...otherReducer\r\n//   referrer: persistReducer(sessionRedConfig, referrer)\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\nexport default () => {\r\n    let store = createStore(\r\n      persistedReducer,\r\n    //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n      undefined,\r\n      compose(applyMiddleware(...middlewares))\r\n    );\r\n    let persistor = persistStore(store);\r\n    return { store, persistor };\r\n};\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./services/redux/config/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistantStore = store();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={persistantStore.store}>\n        <PersistGate loading={null} persistor={persistantStore.persistor}>\n          <App />\n        </PersistGate>\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}